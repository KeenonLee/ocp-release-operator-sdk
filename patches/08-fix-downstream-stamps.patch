diff -up ./internal/annotations/metrics/metrics.go.fix-stamps ./internal/annotations/metrics/metrics.go
--- ./internal/annotations/metrics/metrics.go.fix-stamps	2021-08-10 22:45:43.679072014 -0400
+++ ./internal/annotations/metrics/metrics.go	2021-08-10 22:46:01.612321380 -0400
@@ -69,6 +69,11 @@ func parseVersion(input string) string {
 		return "unknown"
 	}
 
+	if strings.Contains(input, "ocp") {
+		version = version + "-ocp"
+		input = strings.Replace(input, "-ocp", "", 1)
+	}
+
 	if isUnreleased(input) {
 		version = version + "+git"
 	}
diff -up ./internal/annotations/metrics/metrics_test.go.fix-stamps ./internal/annotations/metrics/metrics_test.go
--- ./internal/annotations/metrics/metrics_test.go.fix-stamps	2021-08-10 22:45:52.904200292 -0400
+++ ./internal/annotations/metrics/metrics_test.go	2021-08-10 22:46:17.856547260 -0400
@@ -41,5 +41,21 @@ var _ = Describe("SDK Label helper funct
 			output := parseVersion(version)
 			Expect(output).To(Equal("unknown"))
 		})
+		It("should extract the right downstream sdk version", func() {
+			version := "v1.3.0-ocp"
+			output := parseVersion(version)
+			Expect(output).To(Equal("v1.3.0-ocp"))
+		})
+		It("should extract the right downstream sdk version", func() {
+			version := "v1.3.0-ocp-ge87627f4"
+			output := parseVersion(version)
+			Expect(output).To(Equal("v1.3.0-ocp+git"))
+		})
+		It("should extract the right downstream sdk version", func() {
+			version := "v1.3.0-ocp-ge87627f4-dirty"
+			output := parseVersion(version)
+			Expect(output).To(Equal("v1.3.0-ocp+git"))
+		})
+
 	})
 })
